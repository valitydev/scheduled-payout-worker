server:
  port: '@server.port@'

management:
  server:
    port: '@management.port@'
  metrics:
    export:
      prometheus:
        enabled: false
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

spring:
  application:
    name: '@project.name@'
  output:
    ansi:
      enabled: always
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    url: '@db.url@'
    username: '@db.user@'
    password: '@db.password@'
    hikari:
      idle-timeout: 30000
      maximum-pool-size: 30
  flyway:
    table: schema_version
    schemas: pt
  kafka:
    security:
      protocol: PLAINTEXT
    bootstrap-servers: kafka:9092
    consumer:
      group-id: scheduled-payout-worker-group-1
      client-id: scheduled-payout-worker-pm
      enable-auto-commit: false
      auto-offset-reset: earliest
      max-poll-records: 20
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: dev.vality.scheduledpayoutworker.serde.impl.kafka.SinkEventDeserializer
    topics:
      invoice:
        id: mg-invoice-100-2
        enabled: false
        concurrency: 1
      party-management:
        id: mg-events-party
        enabled: false
        concurrency: 1
retry-policy:
  maxAttempts: 10
service:
  partyManagement:
    url: http://hellgate:8022/v1/processing/partymgmt
    networkTimeout: 5000
  dominant:
    url: http://dominant:8022/v1/domain/repository_client
    networkTimeout: 5000
  schedulator:
    url: http://schedulator:8022/v1/schedulator
    networkTimeout: 5000
    callback-path: http://localhost:8022/v1/schedulator
  payoutManager:
    url: http://payoutmanager:8022/payout/management
    networkTimeout: 5000
  shumway:
    url: http://shumway:8022/accounter
    networkTimeout: 5000

info:
  version: '@project.version@'
  stage: dev
