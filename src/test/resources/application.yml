management:
  metrics:
    export:
      prometheus:
        enabled: false
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

spring:
  kafka:
    security:
      protocol: PLAINTEXT
    bootstrap-servers: ${KAFKA_BOOTSTRAP:localhost:9092}
    client-id: scheduled-payout-worker
    consumer:
      group-id: scheduled-payout-worker-group-1
      enable-auto-commit: false
      auto-offset-reset: earliest
      max-poll-records: 20
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: dev.vality.scheduledpayoutworker.serde.impl.kafka.SinkEventDeserializer
    topics:
      party-management:
        id: mg-party
        enabled: true
        concurrency: 1
  application:
    name: scheduled-payout-worker
  output:
    ansi:
      enabled: always
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    hikari:
      idle-timeout: 30000
      maximum-pool-size: 30
  flyway:
    table: schema_version
    schemas: pt
retry-policy:
  maxAttempts: 10
service:
  partyManagement:
    url: http://hellgate:8022/v1/processing/partymgmt
    networkTimeout: 5000
  dominant:
    url: http://dominant:8022/v1/domain/repository_client
    networkTimeout: 5000
  schedulator:
    url: http://schedulator:8022/v1/schedulator
    networkTimeout: 5000
    callback-path: http://localhost:8022/v1/schedulator
  payoutManager:
    url: http://payoutmanager:8022/payout/management
    networkTimeout: 5000
  shumway:
    url: http://shumway:8022/accounter
    networkTimeout: 5000
